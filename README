astooki-py -- the astronomical toolkit.

* About

Astooki is a command-line tool for analyzing astronomical data using the
astooki library (astooky-lib). Currently it provides rudimentary image
analysis and conversion routines, as well as more complex analysis tools for
(wide-field) wavefront sensor data.

Both astooki and astooki-lib are written by Tim van Werkhoven.

* Install

To install astooki, first make sure the astooki library is available on your
system. Then simply copy astooki-py to a directory in your path and use it

* Howto

To get rudimentary information on how to use astooki, run
   astooki-py --help
and all options will be displayed along with some basic information. A more 
complete list of what astooki can do is given below:

** Stats tool

Purpose: calculate statistics on images
Arguments:

** Convert tool

Purpose: convert images from one format to another.
Arguments:

Notes: Supported input formats currently include: ana, fits, npy. Output formats include fits, npy and png

** Shiftoverlay tool

Purpose: visualize image shifts on the raw images


** Samask tool

Purpose: make a subaperture mask, giving a file with centroid and lower-left coordinates for a mask of subapertures or subimages

** Sfmask tool

Purpose: make a subfield mask

** Saopt tool

Purpose: Optimze a subaperture mask with a flatfield image

** Saupd tool

Purpose: Update a subaperture mask with an offset

** Shifts tool

Purpose: measure image shifts in various subfields and subimages

** Procshifts tool

Purpose: process shifts measured with the shifts tool

** Tomo tool

Purpose: tomographically analyze differential image shifts

* Todo

- 20090514: take telescope angle into account
- 20090517: remove average shift from subfield shift per subfield, does this 
			matter for tomo inversion?
- 20090517: inspect shift and reconstructed shift manually
- 20090518: check cross-correlation, something is going wrong:

703			for (sh0=sh0min; sh0 <= sh0max; sh0++) {
704				for (sh1=sh1min; sh1 <= sh1max; sh1++) {
705					tmpsum = 0.0;
706					for (j=0; j<imgsize[1]; j++) {
707						for (i=0; i<imgsize[0]; i++) {
708							tmpsum += \
709								fabsf(img[j*imstride + i] - ref[(j+sh0)*refstride + i+sh1]);
710						}
711					}
712					//printf("diffmap @ %d: %d,%d", 
(gdb) print tmpsum
$1 = nan(0xfffffe0000000)
(gdb) print img[j*imstride + i] - ref[(j+sh0)*refstride + i+sh1] 
Cannot access memory at address 0x7fff976ec110
(gdb) print img[j*imstride + i]                                 
$2 = 0.955569386
(gdb) print ref[(j+sh0)*refstride + i+sh1]
Cannot access memory at address 0x7fff976ec110
(gdb) print (j+sh0)*refstride + i+sh1 
$3 = 27056
(gdb) print (j+sh0)*refstride        
$4 = 27054
(gdb) print (j+sh0)          
$5 = 162
(gdb) print i+sh1  
$6 = 2
(gdb) print refstride
$7 = 167

- '(j+sh0)*refstride' is the wrong way around?

* Known issues

None

* License

Astooki and astooki-lib are licensed under the Creative Commons share-alike 
license. In short, you are allowed to do anything with the program, as long as 
you provide the changes to the public without any limitations.
